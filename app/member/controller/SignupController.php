<?php

namespace app\member\controller;

use app\logic\AliOssLogic;
use app\member\model\BaseModel;
use app\space\model\SpaceModel;
use app\validate\ParttimeValidate;
use cmf\controller\HomeBaseController;
use think\facade\Validate;
use app\validate\MemberValidate;
use think\Db;


class SignupController extends HomeBaseController
{

    //优先执行判断登录状态

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        $this->token = $this->request->patch('token');

        //判断token的传值
        if (isset($_SERVER["HTTP_TOKEN"])) {
            $this->user = $this->check_user_login($_SERVER["HTTP_TOKEN"]);//验证用户
        } else {
            $this->user = $this->check_user_login($this->token); //验证用户
        }
        if (!$this->user) {
            $this->ajaxResult(-1, '请登录后再试!');
        }

    }


    /*
    * 临时工 - 报名的兼职(报名成功,进行中,已结束)
    */
    public function join_job()
    {
        $data = $this->request->param();
        $errorinfo = (new MemberValidate())->goCheck('join_job', $data);
        if ($errorinfo !== true) $this->ajaxResult(-1, $errorinfo['msg'], $errorinfo['data']);

        $type = $this->request->param('type/d', 0);
        $where = ['p.worker_id' => $this->user['user_id']];
        switch ($type) {
            case 1:
                $where['p.working_status'] = ['in',[3,4]];
                break;
            case 2:
                $where['p.working_status'] = 7;
                break;
            default:
                $this->ajaxResult(-1, '类型错误');
                break;
        }

        $info = Db::table('cmf_job_people')
            ->alias('p')
            ->join('cmf_job j', 'j.id = p.job_id', 'LEFT')
            ->field([
                'j.title', //标题
                'j.money',//金额
                'j.type', //类型
                'j.create_time', //发布时间
                'j.id',//发布兼职id
                'j.status'
            ])
            ->where($where)
            ->order('p.id', 'asc')
            ->paginate($this->pageSize, false, ['page' => $this->currentPage])->toArray();

        $info['count'] = Db::name('job_people')->where(['worker_id' => $this->user['user_id']])->field([
            'IFNULL( SUM( CASE WHEN working_status = 3 OR working_status = 4 OR working_status = 7 THEN 1 ELSE 0 END ), 0) as count',
            'IFNULL( SUM( CASE WHEN working_status = 3 OR working_status = 4 THEN 1 ELSE 0 END ), 0) as processing_count',
            'IFNULL( SUM( CASE WHEN working_status = 7 THEN 1 ELSE 0 END ), 0) as over_count',
        ])->find();

        $this->ajaxResult(1, '请求成功', $info);
    }

    /*
    * 临时工 - 报名的兼职 - 报名成功 - 我的状态
    */
    public function signMyStatus()
    {
        $data = $this->request->param();
        $errorinfo = (new MemberValidate())->goCheck('signMyStatus', $data);
        if ($errorinfo !== true) $this->ajaxResult(-1, $errorinfo['msg'], $errorinfo['data']);

        $id = $this->request->param('job_id/d', 0); //兼职id
        $status = $this->request->param('status/d', 3); // 3报名中 4进行中
        $re = Db::table('cmf_job_people')->where(['worker_id' => $this->user['user_id'], 'job_id' => $id, 'working_status' => $status])->field('boss_id,settlement_status')->find();

        if ($re) {
            $data['boss_info'] = Db::table('cmf_member')->field('id as boss_id,user_nickname,avatar')->where('id', $re['boss_id'])->select();
            $field = 'm.user_nickname,m.avatar';
            if ($status == 4) { //4进行中
                $data['user_info']['settlement_status'] = $re['settlement_status'];
                $field = 'j.settlement_status,m.user_nickname,m.avatar';
            }
            $data['people_info'] = Db::table('cmf_job_people')
                ->where(['j.job_id' => $id, 'working_status' => $status])
                ->alias('j')
                ->join('cmf_member m', 'j.worker_id = m.id', 'LEFT')
                ->field($field)->order('j.id', 'asc')
                ->paginate($this->pageSize, false, ['page' => $this->currentPage])->toArray();

            $this->ajaxResult(1, '成功数据', $data);
        } else {
            $this->ajaxResult(-1, '没有数据');
        }
    }

    /*
    * 临时工 - 报名的兼职 - 报名成功 - 人员状态
    */


    /*
    * 临时工 - 报名的兼职 - 报名成功 - 兼职内容
    */

    public function sign_details()
    {


        $id = $this->request->param('job_id'); //兼职id
        if (!$id || $id < 0) $this->ajaxResult(-1, '参数错误');

        $info = Db::table('cmf_job')
            ->alias('j')
            ->join('cmf_member m', 'j.user_id = m.id', 'LEFT')
            ->where('j.id', $id)
            ->field([
                'm.user_nickname',//用户名
                'j.title',//兼职标题
                'j.starttime',// 兼职开始时间
                'j.endtime',//兼职结束时间
                'j.money',//金额
                'j.type',//类型
                'j.hope', //工作要求
                'j.content', //工作内容
                'j.address',//工作地址
                'j.phone',//联系电话
                'j.views',//历史浏览次数
                'j.total',//总额
            ])
            ->find();

        $this->ajaxResult(1, '请求成功', $info);
    }

    /*
    * 临时工 - 工作中 - 我的状态 - 兼职内容
    */


    /*
    * 临时工 - 工作中 - 人员状态 - 兼职内容
    */


    /*
    * 临时工 - 工作中 - 报名成功 - 兼职内容
    */


    /**
     *working_status  0:默认 1:待接受 2:待付款 3:已预约 4:进行中 5:待评价 6:已退款 7:已结束 8:退款中',
     */
    public function job_del()
    {
        $id = $this->request->param('job_id/d', 0); //兼职id
        if (!$id || $id < 0) $this->ajaxResult(-1, '参数错误');
        $re = Db::table('cmf_job_people')->where(['worker_id' => $this->user['user_id'], 'job_id' => $id])->field('id,working_status')->find();
        $status = Db::table('cmf_job')->where(['id' => $id])->value('status');
        if (in_array($re['working_status'], [0, 1, 3]) && $status < 2) { //用户和工作都没有进入 进行中状态
            $result = Db::table('cmf_job')->where(['id' => $id])->value('join_id');
            if (is_array($result) && $result) {
                $result = json_decode($result);
                $key = array_search($this->user['user_id'], $result);
                if ($key !== false) {
                    array_splice($result, $key, 1);
                }
                Db::table('cmf_job')->where(['id' => $id])->update(['join_id' => json_encode($result)]);
            }
            Db::table('cmf_job_people')->where(['id' => $re['id']])->delete();
            $this->ajaxResult(1, '操作成功');
        } else {
            $this->ajaxResult(-1, '已经在进行不可退出');
        }

    }


    /*
    * 临时工 - 报名的兼职 - 工作中 -  上传凭证
    */

    public function upVoucher()
    {

        $data = $this->request->param();
        $errorinfo = (new MemberValidate())->goCheck('upVoucher', $data);
        if ($errorinfo !== true) $this->ajaxResult(-1, $errorinfo['msg'], $errorinfo['data']);

        // 检查空间
        $files = request()->file('show_picture');
        if (empty($files)) $this->ajaxResult(-1, '文件不能为空');

        // 上传aliyun
        $aliOssLogic = new AliOssLogic();
        $fileItem = $aliOssLogic->uploadFileToAli($files)[0];
        if (empty($fileItem)) $this->ajaxResult(-1, '文件上传失败，请重试');

        $insert_data = array(
            'people_id' => $this->user['user_id'], // 临时工id
            'job_id' => $data['job_id'],
            'show_picture' => $fileItem,//上传图片
            'remarks' => $data['remarks'],
            'create_time' => time() //创建时间
        );

        $insert = Db::table('cmf_job_voucher')->insert($insert_data);

        $insert > 0 ? $this->ajaxResult(1, '上传成功') : $this->ajaxResult(-1, '保存失败请重新提交');

    }

    /*
  * 临时工 - 不结算举报页面
  */

    public function ReportIndex()
    {

        $data = $this->request->param();

        //查看兼职信息

        $re = Db::table('cmf_member')->where('id', $data['id'])->field('avatar,user_nickname')->find();

        $this->ajaxResult(1, '请求成功', $re);
    }

    /*
    * 临时工 - 不结算举报按钮
    */

    public function ReportButton()
    {


        $data = $this->request->param();
        $errorInfo = (new ParttimeValidate())->goCheck('lsg_report');
        if ($errorInfo !== true) $this->ajaxResult(-1, $errorInfo['msg'], $errorInfo['data']);

        $report['boss_id'] = $data['boss_id'];
        $report['people_id'] = $this->user['user_id'];
        $report['job_id'] = $data['job_id'];
        $report['report_type'] = $data['type_id'];
        $report['create_time'] = time();

        $info = Db::table('cmf_report')->insert($report);


        if ($info > 0) {
            $this->ajaxResult(1, '完成');
        } else {
            $this->ajaxResult(-1, '数据错误');
        }


    }
}